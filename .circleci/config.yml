version: 2.1

runinstall: &runinstall
    name: Install CuBIDS
    command: |
      pip install .[all] --progress-bar off
      npm install bids-validator@1.6.0

      # Setup git
      git config --global user.email "circleci@citesting.com"
      git config --global user.name "CircleCI Test"

jobs:
  install_and_test:
    docker:
      - image: cimg/python:3.8-node
    working_directory: /home/circleci/src/CuBIDS
    steps:
      - checkout
      - run: *runinstall
      - run:
          name: Install CuBIDS
          command: |
            py.test -sv tests


  #     - run:
  #         name: Test cubids-remove-metadata-fields
  #         command: |
  #           export PATH=/tmp/miniconda/bin:$PATH
  #           source activate cubids
  #           mkdir -p /tmp/bids
  #           cp -r /home/circleci/src/CuBIDS/cubids/testdata/complete /tmp/bids/metatest

  #           # Get the original metadata fields
  #           cubids-print-metadata-fields \
  #             /tmp/bids/metatest \
  #             --container pennlinc/bond:latest > /tmp/origmd.txt

  #           # Remove some fields
  #           cubids-remove-metadata-fields \
  #             /tmp/bids/metatest \
  #             --container pennlinc/bond:latest \
  #             --fields DeviceSerialNumber AcquisitionTime \
  #                      InstitutionAddress InstitutionName \
  #                      StationName NotARealField > /tmp/removedmd.txt

  #           [ $(diff /tmp/origmd.txt /tmp/removedmd.txt | wc -l) -gt 0 ] && exit 0
  #           exit 1


  # build_docs:
  #   docker:
  #     - image: circleci/python:3.7.4
  #   working_directory: /tmp/src/CuBIDS
  #   steps:
  #     - checkout
  #     - run:
  #         name: Check whether build should be skipped
  #         command: |
  #           if [[ "$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[skip[ _]?docs\]' )" != "" ]]; then
  #             echo "Skipping doc building job"
  #             circleci step halt
  #           fi

  #     - run:
  #         name: Check Python version and upgrade pip
  #         command: |
  #           python --version
  #           sudo python -m pip install -U pip
  #           sudo pip install flake8

  #     - run:
  #         name: Lint code with flake8
  #         command: |
  #           flake8 cubids

  #     - run:
  #         name: Install CuBIDS.
  #         command: sudo python -m pip install ".[doc]" --no-cache-dir --progress-bar off

  #     - run:
  #         name: Build documentation
  #         no_output_timeout: 45m
  #         command: |
  #           make SPHINXOPTS="-W" -C docs html
  #     - store_artifacts:
  #         path: /tmp/src/CuBIDS/docs/_build/html

#   test_deploy_pypi:
#     docker:
#       - image: circleci/python:3.7.4
#     working_directory: /tmp/src/CuBIDS
#     steps:
#       - checkout
#       - run:
#           name: Build CuBIDS
#           command: |
#             pip install --user twine  # For use in checking distributions
#             THISVERSION=$( python3 get_version.py )
#             THISVERSION=${THISVERSION%.dirty*}
#             THISVERSION=${CIRCLE_TAG:-$THISVERSION}
#             virtualenv --python=python build
#             source build/bin/activate
#             pip install --upgrade "pip>=19.1" numpy
#             echo "${CIRCLE_TAG:-$THISVERSION}" > CuBIDS/VERSION
#             python setup.py sdist
#             pip wheel --no-deps -w dist/ .
#       - store_artifacts:
#           path: /tmp/src/CuBIDS/dist
#       - run:
#           name: Check sdist distribution
#           command: |
#             THISVERSION=$( python get_version.py )
#             THISVERSION=${THISVERSION%.dirty*}
#             THISVERSION=${CIRCLE_TAG:-$THISVERSION}
#             twine check dist/CuBIDS*.tar.gz
#             virtualenv --python=python sdist
#             source sdist/bin/activate
#             pip install --progress-bar off --upgrade "pip>=19.1" numpy
#             pip install dist/CuBIDS*.tar.gz
#             which CuBIDS | grep sdist\\/bin
#             INSTALLED_VERSION=$(CuBIDS --version)
#             INSTALLED_VERSION=${INSTALLED_VERSION%$'\r'}
#             INSTALLED_VERSION=${INSTALLED_VERSION#*"CuBIDS v"}
#             echo "VERSION: \"$THISVERSION\""
#             echo "INSTALLED: \"$INSTALLED_VERSION\""
#             test "$INSTALLED_VERSION" = "$THISVERSION"
#       - run:
#           name: Check wheel distribution
#           command: |
#             THISVERSION=$( python get_version.py )
#             THISVERSION=${THISVERSION%.dirty*}
#             THISVERSION=${CIRCLE_TAG:-$THISVERSION}
#             twine check dist/CuBIDS*.whl
#             virtualenv --python=python wheel
#             source wheel/bin/activate
#             pip install dist/CuBIDS*.whl
#             which CuBIDS | grep wheel\\/bin
#             INSTALLED_VERSION=$(CuBIDS --version)
#             INSTALLED_VERSION=${INSTALLED_VERSION%$'\r'}
#             INSTALLED_VERSION=${INSTALLED_VERSION#*"CuBIDS v"}
#             echo "VERSION: \"$THISVERSION\""
#             echo "INSTALLED: \"$INSTALLED_VERSION\""
#             test "$INSTALLED_VERSION" = "$THISVERSION"
#       - run:
#           name: Build CuBIDS-container
#           command: |
#             THISVERSION=$( python get_version.py )
#             THISVERSION=${THISVERSION%.dirty*}
#             cd wrapper
#             virtualenv --python=python build
#             source build/bin/activate
#             pip install --upgrade "pip>=19.1"
#             sed -i -E "s/(__version__ = )'[A-Za-z0-9.-]+'/\1'${CIRCLE_TAG:-$THISVERSION}'/" qsiprep_docker.py
#             python setup.py sdist
#             pip wheel --no-deps -w dist/ .
#       - store_artifacts:
#           path: /tmp/src/CuBIDS/wrapper/dist

#   deploy_pypi:
#     docker:
#       - image: circleci/python:3.7.4
#     working_directory: /tmp/src/CuBIDS
#     steps:
#       - checkout
#       - run:
#           name: Build CuBIDS
#           command: |
#             THISVERSION=$( python get_version.py )
#             virtualenv --python=python build
#             source build/bin/activate
#             pip install --upgrade "pip>=19.1" numpy
#             echo "${CIRCLE_TAG:-$THISVERSION}" > CuBIDS/VERSION
#             python setup.py sdist
#             pip wheel --no-deps -w dist/ .
#       - run:
#           name: Build CuBIDS-container
#           command: |
#             THISVERSION=$( python get_version.py )
#             cd wrapper
#             virtualenv --python=python build
#             source build/bin/activate
#             pip install --upgrade "pip>=19.1"
#             sed -i -E "s/(__version__ = )'[A-Za-z0-9.-]+'/\1'${CIRCLE_TAG:-$THISVERSION}'/" qsiprep_docker.py
#             python setup.py sdist
#             pip wheel --no-deps -w dist/ .
#       - run:
#           name: Upload packages to PyPI
#           command: |
#             pip install --user twine
#             pip install --user --upgrade importlib-metadata
#             twine upload dist/CuBIDS*gz wrapper/dist/CuBIDS*

  deployable:
    docker:
      - image: busybox:latest
    steps:
      - run: echo Deploying!


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - install_and_test:
          filters:
            tags:
              only: /.*/

      # - build_docs:
      #     filters:
      #       branches:
      #         ignore:
      #           - /tests?\/.*/
      #           - /docker\/.*/
      #       tags:
      #         only: /.*/

      - deployable:
          requires:
            - install_and_test
          filters:
            branches:
              only: master
            tags:
              only: /.*/

#       - deploy_pypi:
#           requires:
#             - deployable
#           filters:
#             branches:
#               ignore: /.*/
#             tags:
#               only: /.*/
