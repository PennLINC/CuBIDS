version: 2.1
jobs:
  set_up_conda:
    machine:
      image: ubuntu-2004:202201-02
    working_directory: /home/circleci/src/CuBIDS
    steps:
      - checkout:
          path: /home/circleci/src/CuBIDS
      - run:
          name: install miniconda
          command: |
            export MINICONDA=/tmp/miniconda
            export PATH="$MINICONDA/bin:$PATH"
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh
            bash /tmp/miniconda.sh -b -f -p $MINICONDA
            conda config --set always_yes yes
            conda update conda
            conda info -a
            conda create -n cubids python=3.9 pip
            source activate cubids
            conda install -c conda-forge -y datalad

            # Add nodejs and the validator
            conda install nodejs
            npm install -g yarn && \
            npm install -g bids-validator

      - persist_to_workspace:
          root: /tmp
          paths:
            - miniconda

  run_pytests:
    machine:
      image: ubuntu-2004:202201-02
    working_directory: /home/circleci/src/CuBIDS
    steps:
      - checkout:
          path: /home/circleci/src/CuBIDS

      - attach_workspace:
          at: /tmp

      - run:
          name: Test CuBIDS
          command: |
            export PATH=/tmp/miniconda/bin:$PATH
            source activate cubids

            # Install CuBIDS
            pip install -e .[tests]

            # Reinstall bids-validator
            sudo apt update
            sudo apt install nodejs npm
            npm install -g yarn && \
            npm install -g bids-validator

            # Run tests
            pytest cubids

  deployable:
    docker:
      - image: busybox:latest
    steps:
      - run: echo Deploying!

  deploy_pypi:
    machine:
      image: circleci/classic:201711-01
    working_directory: /tmp/src/CuBIDS
    steps:
      - checkout:
          path: /home/circleci/src/CuBIDS
      - run:
          name: Generate distribution archives
          command: |
            python3 -m pip install --upgrade build
            python3 -m build
      - run:
          name: Upload packages to PyPI
          command: |
            python3 -m pip install --upgrade twine
            python3 -m twine upload dist/*

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - set_up_conda:
          filters:
            tags:
              only: /.*/

      - run_pytests:
          requires:
            - set_up_conda
          filters:
            tags:
              only: /.*/

      - deployable:
          requires:
            - run_pytests
          filters:
            branches:
              only: main
            tags:
              only: /.*/

      - deploy_pypi:
          requires:
            - deployable
          filters:
            branches:
              only: main
            tags:
              only: /.*/
